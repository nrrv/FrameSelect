FrameSelect = LibStub("AceAddon-3.0"):NewAddon("FrameSelect", "AceEvent-3.0", "AceHook-3.0")

local defaults = {
	profile = {
		enabled = true
	}
}

local texCoords = {
	["Raid-AggroFrame"] = {  0.00781250, 0.55468750, 0.00781250, 0.27343750 },
	["Raid-TargetFrame"] = { 0.00781250, 0.55468750, 0.28906250, 0.55468750 },
}

function FrameSelect:OnInitialize()
	self.db = LibStub("AceDB-3.0"):New("FrameSelectDB", defaults, true)

	self.db.RegisterCallback(self, "OnProfileChanged", "Refresh")
	self.db.RegisterCallback(self, "OnProfileCopied", "Refresh")
	self.db.RegisterCallback(self, "OnProfileReset", "Refresh")

	SlashCmdList.FrameSelect = function(msg)
		FrameSelect:SlashCommands(msg)
	end

	SLASH_FrameSelect1 = "/fs"
	SLASH_FrameSelect2 = "/frameselect"
end

function FrameSelect:Refresh()
	print "FS: Refresh"
	-- TODO: reinit frames enable/disable
end

local function doSelectOverride(frame)
	-- print "FS: doSelectOverride"
	-- if frame:IsForbidden() then return end

	frame.selectionHighlight:SetTexture("Interface\\RaidFrame\\Raid-FrameHighlights");
	frame.selectionHighlight:SetTexCoord(unpack(texCoords["Raid-AggroFrame"]));
	frame.selectionHighlight:SetAllPoints(frame);
	frame.selectionHighlight:SetVertexColor(0.0, 1.0, 0.0, 1);
	-- Grey: 0: 0.69, 0.69, 0.69
	-- Yellow: 1: 1, 1, 0.47
	-- Orange: 2: 1, 0.6, 0
	-- Red: 3: 1, 0, 0
	-- Blue: 0.0, 0.0, 1.0, 0.9
end

hooksecurefunc("CompactUnitFrame_UpdateAll", function(frame)
	if frame:IsForbidden() then return end
	-- print "FS: hook: updateAll"
	doSelectOverride(frame)
end)

hooksecurefunc("DefaultCompactUnitFrameSetup", function(frame)
	if frame:IsForbidden() then return end
	-- print "FS: hook: DCUFS"
	doSelectOverride(frame)
	CompactUnitFrame_SetOptionTable(frame, DefaultCompactUnitFrameOptions)
end)

hooksecurefunc("DefaultCompactMiniFrameSetup", function(frame)
	if frame:IsForbidden() then return end
	-- print "FS: hook: DCMFS"
	doSelectOverride(frame)
	CompactUnitFrame_SetOptionTable(frame, DefaultCompactMiniFrameOptions)
end)

function FrameSelect:SlashCommands(arg1)
	-- Arg1 is case sensitive
	-- Arg2 is converted to lower case
	local arg2 = string.lower(arg1)
	if arg2 == "" then
		-- print "FS: /"
	elseif arg2 == "enable" then
		self.db.profile.enabled = not self.db.profile.enabled
		if self.db.profile.enabled == true then
			print("|cFF50C0FFEnable Addon: |cFFADFF2F".. tostring(self.db.profile.enabled) .."|r")
		else
			print("|cFF50C0FFEnable Addon: |cFFFF4500".. tostring(self.db.profile.enabled) .."|r")
		end
	end
end
